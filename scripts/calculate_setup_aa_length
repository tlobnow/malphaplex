#!/bin/bash

#source ~/malphaplex/scripts/01_source.inc

# This function calculates the overall amino acid length of the input fasta files
# based on the specified stoichiometries.
# Arguments:
#   $1: The directory containing the fasta files
#   $2: The directory containing the corresponding feature files
#   $3: The stoichiometry specification
calculate_setup_aa_length() {
    local fasta_dir="${1:-$LOC_FASTA}"
    local feature_dir="${2:-$LOC_FEATURES}"
    local stoichiometry="${3:-$STOICHIOMETRY}"
    local total_length=0

	# Check if the stoichiometry is provided
    if [ -z "$stoichiometry" ]; then
        echo "Error: Stoichiometry is required" >&2
        return 1
    fi

    # Split the stoichiometry into individual feature-count pairs
    IFS='/' read -ra stoichiometry_pairs <<< "$stoichiometry"

	# Calculate the adjusted length for each feature
    for pair in "${stoichiometry_pairs[@]}"; do
        # Split the feature-count pair into feature and count
        IFS=':' read -r feature count <<< "$pair"

        # Split the fasta files in the feature into an array
        IFS=',' read -ra fasta_files <<< "$feature"

        # Loop through each fasta file in the feature
        for fasta_file in "${fasta_files[@]}"; do
            # Construct the path to the fasta file
            fasta_path="${fasta_dir}/${fasta_file}.fasta"

            # Check if the fasta file exists
            if [ ! -f "${fasta_path}" ]; then
                echo "Error: Fasta file not found: ${fasta_path}"
                return 1
            fi

            # Construct the path to the corresponding feature file
            feature_file="${feature_dir}/${fasta_file}/features.pkl"

            # Check if the feature file exists
            if [ ! -f "${feature_file}" ]; then
                echo "Error: Feature file not found: ${feature_file}"
                return 1
            fi

            # Calculate the adjusted length based on the stoichiometry
            feature_length=$(grep -Po "[^>].*" "${fasta_path}" | tr -d '\n' | wc -m)
            adjusted_length=$((feature_length * count))
            total_length=$((total_length + adjusted_length))
        done
    done

    #echo "Overall amino acid length: ${total_length}"
	echo "${total_length}"
}

# Usage: calculate_aa_length [fasta_directory] [feature_directory] stoichiometry
#calculate_setup_aa_length "$1" "$2" "$3"
